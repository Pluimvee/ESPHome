# Copyright (c) 2025 Pluimvee
# ModBus TCP-RTU Bridge ESPHome configuration 

# First some basic configuration
#--------------------------------------------
esphome:
  name: modbus-bridge
  friendly_name: ModBus Bridge

esp8266:
  board: esp01_1m

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

# Allow Over-The-Air updates
ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ModBusTCP Fallback Hotspot"
    password: !secret wifi_ap_password

# Enable logging
logger:
  level: DEBUG  
  baud_rate: 0  # Disable logging on UART (as we need the UART)

#captive_portal:
web_server:
    port: 80
    version: 3

# NOW the device specific logic begins
#--------------------------------------------

# Some special code to allow the ESPHome Modbus TCP-RTU bridge to work
external_components:
  - source: github://Pluimvee/esphome-modbus-tcp-to-rtu
    refresh: 1min

# UART configuration for MAX485
uart:
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 9600
  id: modbus
  rx_buffer_size: 512
#  debug:

modbus_bridge:
   uart_id: modbus
   port: 502
   buffer_size: 256
   timeout: 3000

#and some sensors to monitor the bridge itself   
binary_sensor:
  - platform: modbus_bridge
    connected:
      name: Connected

sensor:
  - platform: modbus_bridge
    connection_count:
      name: "Number of connections"
  - platform: wifi_signal
    name: "WiFi Signal Strength"
    update_interval: 60s
